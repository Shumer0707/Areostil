import '../css/app.css';
import './bootstrap';

import { createApp, h } from 'vue';
import { createPinia } from 'pinia';
import { useLocalizationStore } from './store/localization';
import { createInertiaApp, usePage } from '@inertiajs/vue3';
import { resolvePageComponent } from 'laravel-vite-plugin/inertia-helpers';
import { ZiggyVue, route } from 'ziggy-js';
import { Ziggy } from './ziggy';
import router from './router';

// –î–æ–±–∞–≤–ª—è–µ–º `route()` –≤ `window`, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –≤ –∫–æ–Ω—Å–æ–ª–∏ –∏ –≤ –∫–æ–¥–µ
window.route = route;

// –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Inertia
createInertiaApp({
    resolve: (name) =>
        resolvePageComponent(
            `./Pages/${name}.vue`,
            import.meta.glob('./Pages/**/*.vue')
        ),
    setup({ el, App, props, plugin }) {
        const app = createApp({ render: () => h(App, props) });

        // –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ Pinia –≤ –ø—Ä–æ–¥–∞–∫—à–Ω-—Ä–µ–∂–∏–º–µ
        // const pinia = createPinia();
        // if (import.meta.env.MODE === 'production') {
            console.log = (...args) => {
                if (args[0]?.includes?.('üçç')) return; // –ë–ª–æ–∫–∏—Ä—É–µ–º Pinia-–ª–æ–≥–∏
                console.info(...args); // –†–∞–∑—Ä–µ—à–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏
            };
        // }
        // pinia.use(() => ({ debug: false }));

        app.use(plugin);
        app.use(ZiggyVue, Ziggy);
        app.use(createPinia());
        app.use(router);



        app.config.globalProperties.route = (name, params = {}) => {
            try {
                const page = usePage(); // –ë–µ—Ä—ë–º usePage() —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
                const ziggyRoutes = page?.props?.ziggy?.routes;
                if (!ziggyRoutes || !ziggyRoutes[name]) {
                    console.warn(`–ú–∞—Ä—à—Ä—É—Ç "${name}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Ziggy.`);
                    return '/';
                }
                return `/${ziggyRoutes[name].uri}`;
            } catch (error) {
                console.warn(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ route("${name}")`, error);
                return '/';
            }
        };

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        app.config.globalProperties.$getImageUrl = (path) => {
            return `${import.meta.env.VITE_APP_URL}${path}`;
        };

        // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        app.config.errorHandler = (err) => {
            console.error('–û—à–∏–±–∫–∞ Vue:', err);
        };

        const localizationStore = useLocalizationStore();
        localizationStore.fetchTranslations(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

        // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–≤–æ–¥–∞–º
        app.config.globalProperties.$t = (key) => {
            const keys = key.split('.');
            let translation = localizationStore.translations;

            for (const k of keys) {
                translation = translation?.[k];
                if (!translation) return key; // –ï—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª—é—á
            }
            return translation;
        };

        // ‚úÖ –î–µ–ª–∞–µ–º `localizationStore` –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º
        // app.config.globalProperties.localizationStore = localizationStore;

        app.mount(el);
    },
    progress: {
        color: '#4B5563',
    },
});
